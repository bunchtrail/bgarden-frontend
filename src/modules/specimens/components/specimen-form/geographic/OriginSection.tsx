import React, { useCallback, useRef, useEffect } from 'react';
import { OriginSectionProps } from './types';

export const OriginSection: React.FC<OriginSectionProps> = ({
  formData,
  errors,
  touchedFields,
  formSubmitted,
  markFieldAsTouched,
  handleChange,
  handleSelectChange,
  regionOptions,
}) => {
  // –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const isFirstMount = useRef(true);
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ select —ç–ª–µ–º–µ–Ω—Ç, —á—Ç–æ–±—ã –∏–º–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ
  const regionSelectRef = useRef<HTMLSelectElement>(null);

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º useRef –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const prevFormDataRef = useRef({
    regionId: formData.regionId,
    country: formData.country
  });

  // –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
  const logFormState = useCallback((action: string, data: any = null) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ª–∏ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –¥–∞–Ω–Ω—ã–µ
    const hasChanges = 
      prevFormDataRef.current.regionId !== formData.regionId ||
      prevFormDataRef.current.country !== formData.country;

    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    prevFormDataRef.current = {
      regionId: formData.regionId,
      country: formData.country
    };

    // –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    if (hasChanges || (action === '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞' && isFirstMount.current) || data) {
      console.group('üåç –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–æ—Ä–º—ã –º–µ—Å—Ç–∞ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è');
      console.log('–î–µ–π—Å—Ç–≤–∏–µ:', action);
      console.log('–¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:', {
        regionId: formData.regionId,
        regionName: formData.regionName,
        country: formData.country
      });
      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –≤ —Å–µ–ª–µ–∫—Ç–µ —ç–ª–µ–º–µ–Ω—Ç–µ
      if (regionSelectRef.current) {
        console.log('–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Å–µ–ª–µ–∫—Ç–µ:', regionSelectRef.current.value);
        console.log('–û–ø—Ü–∏—è –≤ —Å–µ–ª–µ–∫—Ç–µ:', regionSelectRef.current.options[regionSelectRef.current.selectedIndex]?.text);
      }
      if (data) {
        console.log('–ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:', data);
      }
      console.log('–û—à–∏–±–∫–∏:', {
        regionId: errors.regionId,
        country: errors.country
      });
      console.log('–ó–∞—Ç—Ä–æ–Ω—É—Ç—ã–µ –ø–æ–ª—è:', {
        regionId: touchedFields.regionId,
        country: touchedFields.country
      });
      console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–≥–∏–æ–Ω—ã:', regionOptions.map(r => `${r.id}: ${r.name}`));
      console.groupEnd();
    }
  }, [formData, errors, touchedFields, regionOptions]);

  // –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
  const handleRegionChange = (e: React.ChangeEvent<HTMLSelectElement>) => {
    const selectedRegion = regionOptions.find(r => r.id === Number(e.target.value));
    logFormState('–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–µ–≥–∏–æ–Ω–∞', {
      name: e.target.name,
      value: e.target.value,
      selectedRegion
    });
    handleSelectChange(e);
  };

  const handleCountryChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    logFormState('–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã', {
      name: e.target.name,
      value: e.target.value
    });
    handleChange(e);
  };

  // –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    if (isFirstMount.current) {
      logFormState('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞');
      isFirstMount.current = false;
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è –≤—ã–∑–æ–≤–∞ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏

  // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Å–µ–ª–µ–∫—Ç–µ –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ
  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ regionId –≤ formData –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å–ø–∏—Å–∫—É —Ä–µ–≥–∏–æ–Ω–æ–≤
    if (formData.regionId !== null && formData.regionId !== undefined && formData.regionId !== 0) {
      const regionExists = regionOptions.some(r => Number(r.id) === Number(formData.regionId));
      
      if (regionExists && regionSelectRef.current) {
        // –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Å–µ–ª–µ–∫—Ç–µ
        const selectValue = regionSelectRef.current.value === '' ? null : Number(regionSelectRef.current.value);
        
        // –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è —Ä–∞–∑–ª–∏—á–∞—é—Ç—Å—è, –æ–±–Ω–æ–≤–ª—è–µ–º —Å–µ–ª–µ–∫—Ç
        if (selectValue !== formData.regionId) {
          console.log(`[OriginSection] –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å–µ–ª–µ–∫—Ç–∞ —Å formData.regionId: ${formData.regionId}`);
          regionSelectRef.current.value = String(formData.regionId);
        }
      } else if (!regionExists) {
        console.warn(`[OriginSection] –†–µ–≥–∏–æ–Ω —Å ID ${formData.regionId} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤`);
      }
    }
  });
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π formData –¥–ª—è –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Å–µ–ª–µ–∫—Ç–∞
  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–µ –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä –∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if (!isFirstMount.current) {
      const hasChanges = 
        prevFormDataRef.current.regionId !== formData.regionId ||
        prevFormDataRef.current.country !== formData.country;

      if (hasChanges) {
        logFormState('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞ –Ω–∞ –∫–∞—Ä—Ç—É');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–µ–ª–µ–∫—Ç–∞ –∑–Ω–∞—á–µ–Ω–∏—é regionId –≤ formData
        if (regionSelectRef.current) {
          const selectValue = regionSelectRef.current.value === '' ? null : Number(regionSelectRef.current.value);
          const formValue = formData.regionId === null || formData.regionId === undefined || formData.regionId === 0 ? null : formData.regionId;
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–π —Ä–µ–≥–∏–æ–Ω —Å —Ç–∞–∫–∏–º ID
          const isValidRegion = formValue !== null && regionOptions.some(r => Number(r.id) === Number(formValue));
          
          // –í—ã–≤–æ–¥–∏–º –ø–æ–¥—Ä–æ–±–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É
          console.log('–¢–µ–∫—É—â–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–≥–∏–æ–Ω—ã:', regionOptions.map(r => ({ id: r.id, name: r.name })));
          console.log('–ó–Ω–∞—á–µ–Ω–∏–µ regionId —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å–ø–∏—Å–∫–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤:', isValidRegion);
          console.log('–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ formData.regionId:', formValue, '—Ç–∏–ø:', typeof formValue);
          console.log('–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Å–µ–ª–µ–∫—Ç–µ:', selectValue, '—Ç–∏–ø:', typeof selectValue);
          
          if (selectValue !== formValue && formValue !== null) {
            console.log('–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å–µ–ª–µ–∫—Ç–∞ –∏ formData.regionId');
            console.log('–ó–Ω–∞—á–µ–Ω–∏–µ –≤ formData:', formValue);
            console.log('–ó–Ω–∞—á–µ–Ω–∏–µ –≤ —Å–µ–ª–µ–∫—Ç–µ:', selectValue);
            
            if (isValidRegion) {
              // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Å–µ–ª–µ–∫—Ç–∞ —Ä–∞–≤–Ω—ã–º formData.regionId
              console.log('–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Å–µ–ª–µ–∫—Ç–∞ —Ä–∞–≤–Ω—ã–º formData.regionId:', formValue);
              // –ü–æ–∏—Å–∫ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞
              const selectedRegion = regionOptions.find(r => Number(r.id) === Number(formValue));
              console.log('–ù–∞–π–¥–µ–Ω —Ä–µ–≥–∏–æ–Ω:', selectedRegion);
              
              // –ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Å–µ–ª–µ–∫—Ç–∞ —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π
              setTimeout(() => {
                if (regionSelectRef.current) {
                  regionSelectRef.current.value = String(formValue);
                  console.log('–°–µ–ª–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ:', String(formValue));
                  
                  // –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Å–æ–±—ã—Ç–∏–µ change –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
                  const event = new Event('change', { bubbles: true });
                  regionSelectRef.current.dispatchEvent(event);
                }
              }, 10);
            } else {
              console.warn(`–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ ${formValue} –≤ —Å–µ–ª–µ–∫—Ç - —Ç–∞–∫–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ`);
            }
          }
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–µ–π—Å, –∫–æ–≥–¥–∞ regionId —Å–±—Ä–æ—Å–∏–ª—Å—è –¥–æ null, –Ω–æ regionName —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è
        if ((formData.regionId === null || formData.regionId === 0) && formData.regionName && regionOptions.length > 0) {
          // –ò—â–µ–º —Ä–µ–≥–∏–æ–Ω –ø–æ –∏–º–µ–Ω–∏
          const regionByName = regionOptions.find(r => r.name === formData.regionName);
          
          if (regionByName) {
            console.log(`–û–±–Ω–∞—Ä—É–∂–µ–Ω —Å–±—Ä–æ—Å regionId –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ regionName. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ –∏–º–µ–Ω–∏ ${formData.regionName}: ${regionByName.id}`);
            
            // –°–æ–∑–¥–∞–µ–º –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ select –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è
            const event = {
              target: {
                name: 'regionId',
                value: String(regionByName.id)
              }
            } as React.ChangeEvent<HTMLSelectElement>;
            
            // –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
            handleSelectChange(event);
          }
        }
      }
    }
  }, [formData, logFormState, regionOptions, handleSelectChange]);

  return (
    <div className="p-4 bg-white rounded-xl border border-gray-200 transition-all duration-300 hover:border-green-200">
      <h4 className="font-medium text-gray-700 mb-3 flex items-center">
        <span className="mr-2">üåç</span>
        –ú–µ—Å—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è
      </h4>
      <div className="space-y-4">
        <div className="mb-5 transition-all duration-300 rounded-lg p-3 focus-within:bg-gray-50/80">
          <div className="flex flex-col sm:flex-row sm:items-start space-y-1 sm:space-y-0">
            <label
              htmlFor="regionId"
              className="block text-sm font-medium text-gray-700 sm:w-1/3 sm:py-2 transition-colors duration-200"
            >
              –†–µ–≥–∏–æ–Ω –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è
              <span className="text-red-500 ml-1 font-bold">*</span>
            </label>
            <div className="mt-1 sm:mt-0 sm:w-2/3 relative">
              <select
                ref={regionSelectRef}
                id="regionId"
                name="regionId"
                className={`rounded-lg w-full border border-gray-300 px-4 py-2.5 transition-all duration-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 ${
                  errors.regionId && (touchedFields.regionId || formSubmitted)
                    ? 'border-red-500 bg-red-50'
                    : touchedFields.regionId
                    ? 'border-green-400 ring-1 ring-green-200 bg-green-50'
                    : 'border-gray-300 bg-white hover:border-blue-300'
                } transition-all duration-300 ease-in-out pr-10 appearance-none`}
                value={formData.regionId !== null && formData.regionId !== undefined && formData.regionId !== 0 ? String(formData.regionId) : ''}
                onChange={handleRegionChange}
                onBlur={() => markFieldAsTouched('regionId')}
                required
                aria-invalid={!!errors.regionId}
              >
                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è</option>
                {regionOptions.map((region) => (
                  <option key={region.id} value={region.id}>
                    {region.name} ({region.id})
                  </option>
                ))}
              </select>
              <div className="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-500">
                <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M19 9l-7 7-7-7" />
                </svg>
              </div>
            </div>
          </div>
        </div>
        <div className="mb-5 transition-all duration-300 rounded-lg p-3 focus-within:bg-gray-50/80">
          <div className="flex flex-col sm:flex-row sm:items-start space-y-1 sm:space-y-0">
            <label
              htmlFor="country"
              className="block text-sm font-medium text-gray-700 sm:w-1/3 sm:py-2 transition-colors duration-200"
            >
              –°—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è
            </label>
            <div className="mt-1 sm:mt-0 sm:w-2/3 relative">
              <input
                id="country"
                name="country"
                type="text"
                value={formData.country || ''}
                onChange={handleCountryChange}
                onBlur={() => markFieldAsTouched('country')}
                className={`rounded-lg w-full border border-gray-300 px-4 py-2.5 transition-all duration-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 ${
                  errors.country && (touchedFields.country || formSubmitted)
                    ? 'border-red-500 bg-red-50'
                    : touchedFields.country
                    ? 'border-green-400 ring-1 ring-green-200 bg-green-50'
                    : 'border-gray-300 bg-white hover:border-blue-300'
                } transition-all duration-300 ease-in-out transition-transform duration-300 hover:scale-[1.01] focus:scale-[1.01]`}
                placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è"
                aria-invalid={!!errors.country}
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default OriginSection; 
