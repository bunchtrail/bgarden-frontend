---
description: Руководство по стилям Botanical Garden App
globs: 
alwaysApply: false
---
---
description: Botanical Garden App Style Guide
globs: "**/*.{tsx,ts,js,jsx}"
alwaysApply: true
---

# Botanical Garden App Style Guide

## Core Principles
- Use **Tailwind CSS v3.3.0** for styling all components.
- Maintain a consistent visual style throughout the application.
- Use CSS modules only for styles that cannot be implemented via Tailwind.
- Utilize global style constants from `src/styles/global-styles.ts`.

## Color Palette
- **Primary Color**: blue-600 (#2563EB)
- **Brand Color**: green-700 (for navigation)
- **Accent Colors**:
  - Success: green-600 (#16A34A)
  - Warning: amber-500 (#F59E0B)
  - Danger: red-600 (#DC2626)
- **Neutral Colors**:
  - Card Background: white (#FFFFFF)
  - App Background: gray-50 (#F9FAFB)
  - Primary Text: gray-900 (#111827)
  - Secondary Text: gray-600 (#4B5563)

## Components

### Cards
```jsx
// Use the Card component from components/Card.tsx
<Card 
  title="Title"
  description="Description"
  imageUrl="/path/to/image.jpg"
  tags={["tag1", "tag2"]}
  withHover={true}
/>

// Or apply the following classes:
<div className="rounded-lg mb-3 p-4 sm:p-6 bg-white shadow transition-all duration-200 hover:-translate-y-0.5 hover:shadow-md">
  {/* Card content */}
</div>
```

### Buttons
```jsx
// Use the Button component from components/Button.tsx
<Button variant="primary" onClick={handleClick}>
  Button Text
</Button>

// Or use global styles:
<button className={buttonClasses.primary}>
  Button Text
</button>

// Direct Tailwind usage (not recommended but acceptable):
<button className="w-full sm:w-auto rounded-full m-0.5 bg-blue-600 hover:bg-blue-700 text-white">
  Button Text
</button>
```

### Headings and Text
```jsx
// Use classes from global styles:
<h2 className={textClasses.heading}>Heading</h2>
<p className={`${textClasses.body} ${textClasses.secondary}`}>Paragraph text</p>

// Or direct Tailwind usage:
<h2 className="text-xl sm:text-2xl font-bold leading-tight">Heading</h2>
<p className="break-words mb-2 leading-relaxed">Paragraph text</p>
```

### Tags and Chips
```jsx
// Use the Chip component from components/ui/Chip.tsx
<Chip label="Label" variant="neutral" />

// Or use global styles:
<span className={`${chipClasses.base} ${chipClasses.neutral}`}>Label</span>

// Direct Tailwind usage:
<span className="truncate m-0.5 bg-green-100 text-green-800 px-2 py-1 text-sm rounded-full">
  Label
</span>
```

### Navigation
```jsx
// For main navigation, use the Header component:
<Header logoUrl="/images/logo.jpg" title="Botanical Garden" />

// For navigation menu items:
<Link to="/path" className={headerClasses.navLink}>
  Menu Item
</Link>
```

### Responsive Design
- Use `sm:`, `md:`, `lg:` prefixes for responsiveness.
- Apply padding: `p-4 sm:p-6`.
- Adjust font sizes: `text-base sm:text-lg`.
- Adapt grid layouts: `grid-cols-1 sm:grid-cols-2`.

### Animations
- Use `transition-all duration-200` for smooth transitions.
- Apply `hover:` for interactive elements.
- Use `animate-fadeIn` for entry animations (configured in tailwind.config.js).

## Authentication Component Guidelines
- Use the `ProtectedRoute` component for protected routes.
- Always utilize the `useAuth()` hook for authentication checks.
- All authentication forms should use the `Form` component from ui/Form.tsx.